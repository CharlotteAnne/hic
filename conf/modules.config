process {

  //Default
  publishDir = [
    path: { "${params.outdir}/${task.process.tokenize(':')[-1].tokenize('_')[0].toLowerCase()}" },
    mode: 'copy',
    saveAs: { filename -> filename.equals('versions.yml') ? null : filename }
  ]

  //**********************************************
  // PREPARE_GENOME
  withName: 'BOWTIE2_BUILD' {
    publishDir = [
      path: { "${params.outdir}/genome/bowtie2" },
      mode: 'copy',
      enabled: params.save_reference
    ]
  }

  withName: 'GET_CHROMSIZE' {
    publishDir = [
      path: { "${params.outdir}/genome" },
      mode: 'copy',
      enabled: params.save_reference
    ]
  }

  withName: 'GET_RESTRICTION_FRAGMENTS' {
    publishDir = [
      path: { "${params.outdir}/genome" },
      mode: 'copy',
      enabled: params.save_reference
    ]
  }

  //*******************************************
  // HICPRO
  withName: 'BOWTIE2_ALIGN' {
    publishDir = [
      path: { "${params.outdir}/hicpro/mapping" },
      mode: 'copy',
      enabled: params.save_aligned_intermediates
    ]
    ext.prefix = { "${meta.id}_${meta.mates}" }
    ext.args = params.bwt2_opts_end2end ?: ''
  }

  withName: 'TRIM_READS' {
    publishDir = [
      path: { "${params.outdir}/hicpro/mapping/" },
      mode: 'copy',
      enabled: params.save_aligned_intermediates
    ]
  }

  withName: 'BOWTIE2_ALIGN_TRIMMED' {
    publishDir = [
      path: { "${params.outdir}/hicpro/mapping" },
      mode: 'copy',
      enabled: params.save_aligned_intermediates
    ]
    ext.prefix = { "${meta.id}_${meta.mates}_trimmed" }
    ext.args = params.bwt2_opts_trimmed ?: ''
  }

  withName: 'MERGE_BOWTIE2' {
    publishDir = [
      path: { "${params.outdir}/hicpro/mapping" },
      mode: 'copy',
      enabled: params.save_aligned_intermediates
    ]
  }

  withName: 'COMBINE_MATES' {
    publishDir = [
      path: { "${params.outdir}/hicpro/mapping" },
      mode: 'copy'
    ]
    ext.args = [
      "-t",
      params.keep_multi ? "--multi" : "",
      params.min_mapq ? "-q ${params.min_mapq}" : ""
    ].join(' ').trim()
  }

  withName: 'GET_VALID_INTERACTION' {
    publishDir = [
      path: { "${params.outdir}/hicpro/valid_pairs" },
      mode: 'copy'
    ]
    ext.args = [
      params.min_cis_dist > 0 ? " -d ${params.min_cis_dist}" : '',
      params.min_insert_size > 0 ?  " -s ${params.min_insert_size}" : '',
      params.max_insert_size > 0 ? " -l ${params.max_insert_size}" : '',
      params.min_restriction_fragment_size > 0 ? " -t ${params.min_restriction_fragment_size}" : '',
      params.max_restriction_fragment_size > 0 ? " -m ${params.max_restriction_fragment_size}" : '',
      params.save_interaction_bam ? " --sam" : ''
    ].join(' ').trim()
  }

  withName: 'MERGE_VALID_INTERACTION' {
    publishDir = [
      path: { "${params.outdir}/hicpro/valid_pairs" },
      mode: 'copy'
    ]
  }

  withName: 'HICPRO2PAIRS' {
    publishDir = [
      path: { "${params.outdir}/hicpro/valid_pairs/pairix/" },
      mode: 'copy'
    ]
  }

  withName: 'BUILD_CONTACT_MAPS' {
    publishDir = [
      path: { "${params.outdir}/hicpro/matrix/raw" },
      mode: 'copy',
      enabled: params.hicpro_maps
    ]
  }

  withName: 'ICE_NORMALIZATION' {
    publishDir = [
      path: { "${params.outdir}/hicpro/matrix/iced" },
      mode: 'copy',
      enabled: params.hicpro_maps
    ]
  }

  //*****************************************
  // COOLER

  withName: 'COOLER_MAKEBINS' {
    publishDir = [
      path: { "${params.outdir}/contact_maps/bins/" },
      saveAs: { filename -> filename.equals('versions.yml') ? null : filename },
      mode: 'copy'                                                      
    ]
  }

  withName: 'COOLER_CLOAD' {
    publishDir = [
      path: { "${params.outdir}/contact_maps/cool/" },
      saveAs: { filename -> filename.equals('versions.yml') ? null : filename },
      mode: 'copy',
      enabled : params.save_raw_maps
    ]
    ext.args = "pairs -c1 2 -p1 3 -c2 4 -p2 5"
  }

  withName: 'COOLER_BALANCE' {
    publishDir = [
      path: { "${params.outdir}/contact_maps/cool/" },
      saveAs: { filename -> filename.equals('versions.yml') ? null : filename },
      mode: 'copy'
    ]
    ext.args = '--force'
  }

  withName: 'COOLER_DUMP' {
    publishDir = [
      enabled: false
    ]
    ext.args = "--one-based-ids --balanced --na-rep 0"
  }

  withName:'SPLIT_COOLER_DUMP' {
    publishDir = [
      [
        path: { "${params.outdir}/contact_maps/txt/" },
        mode: 'copy',
        pattern: "*_raw.txt",
	enabled: params.save_raw_maps
      ],
      [
        path: { "${params.outdir}/contact_maps/txt/" },
        mode: 'copy',
        pattern: "*_norm.txt"
      ]
    ]
  }

  withName: 'COOLER_ZOOMIFY' {
    publishDir = [
      path: { "${params.outdir}/contact_maps/cool/" },
      saveAs: { filename -> filename.equals('versions.yml') ? null : filename },
      mode: 'copy'
    ]
    ext.args = "--balance"
  }
}
